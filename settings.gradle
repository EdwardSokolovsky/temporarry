pluginManagement {
    repositories {
        ivy {
            url "$System.env.HOME/.ivy2/local" // Укажите путь к локальному Ivy-репозиторию
            patternLayout {
                artifact "[organisation]/[module]/[revision]/[type]s/[artifact].[ext]"
                ivy "[organisation]/[module]/[revision]/ivys/ivy.xml"
            }
            metadataSources {
                ivyDescriptor() // Указывает Gradle использовать ivy.xml для метаданных
                artifact()      // Подключает поиск артефактов
            }
        }
        gradlePluginPortal()
        mavenCentral()
        maven {
            url 'https://your.custom.repository.com/repo'

            credentials {
                username = 'yourUsername'
                password = 'yourPassword'
            }

            authentication {
                basic(BasicAuthentication)
            }

            // Путь к truststore.jks в корне проекта
            def trustStorePath = file('truststore.jks') // файл truststore лежит в корне проекта
            def trustStorePassword = findProperty('trustStorePassword') ?: 'defaultPassword'

            // Устанавливаем SSL параметры
            if (trustStorePath.exists()) {
                System.setProperty('javax.net.ssl.trustStore', trustStorePath.absolutePath)
                System.setProperty('javax.net.ssl.trustStorePassword', trustStorePassword)
            } else {
                throw new GradleException("TrustStore file not found at: " + trustStorePath)
            }
        }
    }
    plugins {
        id 'org.gradle.playframework' version '0.11' // Play Framework плагин для Gradle
        id 'scala' version '2.13.14'
        id 'com.github.maiflai.scalatest' version '0.32'
        id 'application'
    }
}

rootProject.name = 'my_project'

dependencyResolutionManagement {
    repositoriesMode.set(RepositoriesMode.PREFER_SETTINGS)
    repositories {
        mavenCentral()
        maven {
            url 'https://repo.typesafe.com/typesafe/releases/'
        }
    }
}
